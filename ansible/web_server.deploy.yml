---
- hosts: all
  become: true
  gather_facts: false
  tasks:
    - name: Install python 2.
      raw: test -e /usr/bin/python || (apt-get -y update && apt-get install -y python-minimal)

- hosts: all
  become: true
  vars:
    terraform_repository_location: "/home/{{ ansible_user }}/terraform_POC"
    terraform_wep_app_location: "{{ terraform_repository_location }}/webapp"
  pre_tasks:
    - name: Install git.
      apt:
        name: git
        update_cache: yes
  roles:
    - role: nginx
      nginx_remove_default_vhost: true
      nginx_vhosts:
        - listen: 80
          server_name: "{{ provider }}.terraform.poc.com"
          extra_parameters: |
            location / {
                proxy_pass         http://localhost:3000/;

                proxy_set_header   Host             $host;
                proxy_set_header   X-Real-IP        $remote_addr;
                proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Proto http;
                proxy_max_temp_file_size 0;

                proxy_connect_timeout      150;
                proxy_send_timeout         100;
                proxy_read_timeout         100;

                proxy_buffer_size          8k;
                proxy_buffers              4 32k;
                proxy_busy_buffers_size    64k;
                proxy_temp_file_write_size 64k;
            }

    - role: node
      nodejs_version: "8.x"
  post_tasks:
    - name: Install "PM2" node.js package globally.
      npm:
        name: pm2
        global: yes

    - name: Import web app project.
      become_user: "{{ lookup('env', 'USER') }}"
      git:
        repo: "https://github.com/DidelotK/terraform_POC"
        dest: "{{ terraform_repository_location }}"

    - name: Install web app packages based on package.json.
      shell: "npm i"
      args:
        chdir: "{{ terraform_wep_app_location }}"

    - name: Configure environment.
      lineinfile:
        dest: /etc/environment
        regexp: "^PROVIDER="
        line: "PROVIDER={{ provider }}"

    - name: Configure environment (Azure database user).
      lineinfile:
        dest: /etc/environment
        regexp: "^DATABASE_USER="
        line: "DATABASE_USER={{ database_user }}"
      when: provider == "azure"

    - name: Configure environment (Azure database password).
      lineinfile:
        dest: /etc/environment
        regexp: "^DATABASE_PASSWORD="
        line: "DATABASE_PASSWORD={{ database_password }}"
      when: provider == "azure"

    - name: Launch web app.
      become_user: ubuntu
      shell: "pm2 start server.js"
      args:
        chdir: "{{ terraform_wep_app_location }}/app/back"
